<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd      http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd     ">
    <camelContext id="camelContext-2edc5dec-19f9-471e-aec8-71f7fe439b72" xmlns="http://camel.apache.org/schema/spring">
        <endpoint id="endpointQueueIncomingTxPayments" uri="activemq:queue:incomingTxPayments"/>
        <endpoint id="endpointQueueOutgoingTxPayments" uri="activemq:queue:outgoingTxPayments"/>
        <endpoint id="endpointfileIn" uri="file:src/main/data/in?noop=true"/>
        <endpoint id="endpointfileOut" uri="file:src/main/data/out"/>
        <dataFormats>
            <jaxb contextPath="com.redhat.training.payment" id="jaxb" prettyPrint="true"/>
        </dataFormats>
        <!-- 1. Seeds the queue with data. -->
        <route id="_route4">
            <from id="_from1" ref="endpointfileIn"/>
            <to id="_to1" ref="endpointQueueIncomingTxPayments"/>
        </route>
        <!-- 2  PaymentCurrencyWithTxRouter -->
        <route id="_route5">
            <from id="_from2" ref="endpointQueueIncomingTxPayments"/>
            <transacted id="_transacted1" ref="POLICY_PROPAGATION_REQUIRED"/>
            <log id="_log1" message="Received Message ${body}"/>
            <idempotentConsumer id="_idempotentConsumer1" messageIdRepositoryRef="processedMessagesRepository">
                <header>CamelFileNameOnly</header>
                <unmarshal id="_unmarshal1" ref="jaxb"/>
                <bean id="_bean1" method="insert" ref="paymentBean"/>
                <marshal id="_marshal1" ref="jaxb"/>
                <log id="_log2" message="Save Message ${body}"/>
                <to id="_to2" uri="endpointQueueOutgoingTxPayments"/>
            </idempotentConsumer>
        </route>
        <!-- 3 -->
        <route id="_route6">
            <from id="_from3" uri="activemq:queue:outgoingTxPayments"/>
            <convertBodyTo id="_convertBodyTo1" type="java.lang.String"/>
            <to id="_to3" ref="endpointfileOut"/>
        </route>
    </camelContext>
    <!--    <bean id="currencyWithTxChecker" class="com.redhat.gpte.training.camel.h2.PaymentCurrencyWithTxRouter">
        <property name="dataSource" ref="dataSource"/>
    </bean>-->
    <bean class="com.redhat.gpte.training.camel.PaymentBean" id="paymentBean">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean
        class="org.springframework.jms.connection.JmsTransactionManager" id="jmsTransactionManager">
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
    </bean>
    <bean class="org.apache.activemq.ActiveMQConnectionFactory" id="jmsConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616?jms.redeliveryPolicy.maximumRedeliveries=3&amp;jms.redeliveryPolicy.initialRedeliveryDelay=500"/>
    </bean>
    <bean class="org.apache.camel.component.jms.JmsComponent"
        id="bean-996f2d59-b063-4a44-b1dc-c631cfafdd44" name="activemq">
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
        <property name="transactionManager" ref="jmsTransactionManager"/>
        <property name="transacted" value="true"/>
    </bean>
    <!--  PostgreSQL
    <bean id="postgres-ds" class="org.postgresql.ds.PGPoolingDataSource">
        <property name="serverName" value="localhost"/>
        <property name="databaseName" value="fuse_demo"/>
        <property name="portNumber" value="0"/>
        <property name="user" value="fuse_user"/>
        <property name="password" value="fuse_user"/>
        <property name="dataSourceName" value="postgres-ds"/>
        <property name="initialConnections" value="1"/>
        <property name="maxConnections" value="10"/>
      </bean>
    -->
    <!-- MySQL
        <bean id="datasource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/fuse_demo"/>
        <property name="username" value="root"/>
        <property name="password" value=""/>
        <property name="initialSize" value="5"/>
        <property name="maxActive" value="10"/>
        <property name="maxIdle" value="5"/>
        <property name="minIdle" value="2"/>
    </bean>
    -->
    <bean class="org.apache.tomcat.jdbc.pool.DataSource"
        destroy-method="close" id="dataSource">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:tcp://localhost:9123/jbossfuse-demo"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
        <property name="initialSize" value="5"/>
        <property name="maxActive" value="10"/>
        <property name="maxIdle" value="5"/>
        <property name="minIdle" value="2"/>
    </bean>
    <bean
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
        id="bean-4065c455-52a3-47dd-8f87-b3543fcd9ace" name="jdbcTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--    <bean id="POLICY_PROPAGATION_REQUIRED"
          class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="jdbcTransactionManager"/>
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"/>
    </bean>-->
    <bean class="org.apache.camel.spring.spi.SpringTransactionPolicy" id="POLICY_PROPAGATION_REQUIRED">
        <property name="transactionManager" ref="jdbcTransactionManager"/>
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"/>
    </bean>
    <bean
        class="com.redhat.gpte.training.camel.h2.JdbcMessageIdRepository" id="processedMessagesRepository">
        <property name="dataSource" ref="dataSource"/>
    </bean>
</beans>
